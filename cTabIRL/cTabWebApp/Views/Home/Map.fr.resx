<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Buttons" xml:space="preserve">
    <value>Boutons</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Center map on current position, and follow position" xml:space="preserve">
    <value>Centre la carte sur la position actuelle et suit la position</value>
  </data>
  <data name="Choose a tactical map" xml:space="preserve">
    <value>Choisir une carte tactique</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="Compose a new text message" xml:space="preserve">
    <value>Composer un nouveau message.</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connecté</value>
  </data>
  <data name="Connecting..." xml:space="preserve">
    <value>Connection...</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copier</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Disconnected" xml:space="preserve">
    <value>Déconnecté</value>
  </data>
  <data name="Dismiss alert" xml:space="preserve">
    <value>Lever l'alerte</value>
  </data>
  <data name="EFIS" xml:space="preserve">
    <value>EFIS</value>
  </data>
  <data name="Electronic flight instrument system for helicopter pilots and co-pilots." xml:space="preserve">
    <value>Electronic flight instrument system (système d'instruments de vol électronique) pour les pilotes et co-pilotes d'hélicoptère.</value>
  </data>
  <data name="Exit and return to home" xml:space="preserve">
    <value>Sortir et revenir à l'accueil</value>
  </data>
  <data name="Full user manual on GitHub" xml:space="preserve">
    <value>Manuel utilisateur complet sur GitHub</value>
  </data>
  <data name="Full-screen display (on supported devices)" xml:space="preserve">
    <value>Affiche en plein écran (sur appareils compatibles).</value>
  </data>
  <data name="https://github.com/jetelain/cTab/blob/master/docs/cTabIRL/endUser.md" xml:space="preserve">
    <value>https://github.com/jetelain/cTab/blob/master/docs/cTabIRL/endUser.fr.md</value>
  </data>
  <data name="Inbox" xml:space="preserve">
    <value>Boite de réception</value>
  </data>
  <data name="Inbox with received messages, and sent messages" xml:space="preserve">
    <value>Boite de reception et messages envoyés.</value>
  </data>
  <data name="Load a tactical map" xml:space="preserve">
    <value>Charger une carte tactique</value>
  </data>
  <data name="Load from {0}" xml:space="preserve">
    <value>Charger depuis {0}</value>
  </data>
  <data name="Loading..." xml:space="preserve">
    <value>Chargement en cours...</value>
  </data>
  <data name="MEDEVAC" xml:space="preserve">
    <value>EVASAN</value>
  </data>
  <data name="Message Content" xml:space="preserve">
    <value>Contenu du message</value>
  </data>
  <data name="Please sign-in on {0} and then click on refresh button." xml:space="preserve">
    <value>Veulliez vous identifier sur {0} et cliquer sur le bouton actualiser.</value>
  </data>
  <data name="Preformated" xml:space="preserve">
    <value>Préformaté</value>
  </data>
  <data name="Prevent sleep mode if full-screen is not available" xml:space="preserve">
    <value>Empêche la mise en veille si le mode plein écran n'est pas disponible</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Actualiser</value>
  </data>
  <data name="See &lt;a href=&quot;{0}&quot;&gt;{0}&lt;/a&gt; to create your own templates." xml:space="preserve">
    <value>Voir &lt;a href="{0}"&gt;{0}&lt;/a&gt; pour créer vos propres modèles.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Envoyer</value>
  </data>
  <data name="Send alert" xml:space="preserve">
    <value>Envoyer l'alerte</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Envoyé</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Partager</value>
  </data>
  <data name="Share your cTab in read-only mode." xml:space="preserve">
    <value>Partager votre cTab en lecture seule.</value>
  </data>
  <data name="Sign-in on {0}" xml:space="preserve">
    <value>S'identifier sur {0}</value>
  </data>
  <data name="Switch to EFIS" xml:space="preserve">
    <value>Basculer sur l'EFIS</value>
  </data>
  <data name="Tactical map will be displayed on your mobile device and in Arma. Changes made on {0} will be applied in real-time." xml:space="preserve">
    <value>La carte tactique sera affiché sur votre appareil mobile et dans Arma. Les modifications apportées sur {0} seront appliquées en temps réel.</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>À</value>
  </data>
  <data name="To add a marker on a position: right click/long tap or double click/double tap." xml:space="preserve">
    <value>Pour ajouter un marqueur sur une position : clic droit/appui long, ou double clic/double tape.</value>
  </data>
  <data name="Top bar displays connectivity, heading, clock time and MGRS position (meter precision)." xml:space="preserve">
    <value>La barre haute affiche la connectivité, la boussole numérique, l'heure, et la position MGRS (précision métrique).</value>
  </data>
  <data name="Troop In Contact ALERT" xml:space="preserve">
    <value>Alerte TIC (Troop In Contact)</value>
  </data>
  <data name="Unload current map" xml:space="preserve">
    <value>Décharger la carte actuelle</value>
  </data>
  <data name="User manual" xml:space="preserve">
    <value>Manuel utilisateur</value>
  </data>
  <data name="Wait for cTab" xml:space="preserve">
    <value>En attente de cTab</value>
  </data>
</root>