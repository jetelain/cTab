<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Buttons" xml:space="preserve">
    <value>Buttons</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Center map on current position, and follow position" xml:space="preserve">
    <value>Center map on current position, and follow position</value>
  </data>
  <data name="Choose a tactical map" xml:space="preserve">
    <value>Choose a tactical map</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Compose a new text message" xml:space="preserve">
    <value>Compose a new text message</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="Connecting..." xml:space="preserve">
    <value>Connecting...</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Delete photo ? It will not be possible to restore it." xml:space="preserve">
    <value>Delete photo ? It will not be possible to restore it.</value>
  </data>
  <data name="Disconnected" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="Dismiss alert" xml:space="preserve">
    <value>Dismiss alert</value>
  </data>
  <data name="Download an archive with all photos" xml:space="preserve">
    <value>Download an archive with all photos</value>
  </data>
  <data name="Download archive" xml:space="preserve">
    <value>Download archive</value>
  </data>
  <data name="EFIS" xml:space="preserve">
    <value>EFIS</value>
  </data>
  <data name="Electronic flight instrument system for helicopter pilots and co-pilots." xml:space="preserve">
    <value>Electronic flight instrument system for helicopter pilots and co-pilots.</value>
  </data>
  <data name="Exit and return to home" xml:space="preserve">
    <value>Exit and return to home</value>
  </data>
  <data name="Full user manual on GitHub" xml:space="preserve">
    <value>Full user manual on GitHub</value>
  </data>
  <data name="Full-screen display (on supported devices)" xml:space="preserve">
    <value>Full-screen display (on supported devices)</value>
  </data>
  <data name="https://github.com/jetelain/cTab/blob/master/docs/cTabIRL/endUser.md" xml:space="preserve">
    <value>https://github.com/jetelain/cTab/blob/master/docs/cTabIRL/endUser.md</value>
  </data>
  <data name="Imagery Intelligence Feed" xml:space="preserve">
    <value>Imagery Intelligence Feed</value>
  </data>
  <data name="Inbox" xml:space="preserve">
    <value>Inbox</value>
  </data>
  <data name="Inbox with received messages, and sent messages" xml:space="preserve">
    <value>Inbox with received messages, and sent messages</value>
  </data>
  <data name="Load a tactical map" xml:space="preserve">
    <value>Load a tactical map</value>
  </data>
  <data name="Load from {0}" xml:space="preserve">
    <value>Load from {0}</value>
  </data>
  <data name="Loading..." xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="MEDEVAC" xml:space="preserve">
    <value>MEDEVAC</value>
  </data>
  <data name="Message Content" xml:space="preserve">
    <value>Message Content</value>
  </data>
  <data name="Please sign-in on {0} and then click on refresh button." xml:space="preserve">
    <value>Please sign-in on {0} and then click on refresh button.</value>
  </data>
  <data name="Preformated" xml:space="preserve">
    <value>Preformated</value>
  </data>
  <data name="Prevent sleep mode if full-screen is not available" xml:space="preserve">
    <value>Prevent sleep mode if full-screen is not available</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Restore from archive" xml:space="preserve">
    <value>Restore from archive</value>
  </data>
  <data name="Restore photos of a previous session from an archive" xml:space="preserve">
    <value>Restore photos of a previous session from an archive</value>
  </data>
  <data name="See &lt;a href=&quot;{0}&quot;&gt;{0}&lt;/a&gt; to create your own templates." xml:space="preserve">
    <value>See &lt;a href="{0}"&gt;{0}&lt;/a&gt; to create your own templates.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Send alert" xml:space="preserve">
    <value>Send alert</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="Share" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="Share your cTab in read-only mode." xml:space="preserve">
    <value>Share your cTab in read-only mode.</value>
  </data>
  <data name="Show markers on map" xml:space="preserve">
    <value>Show markers on map</value>
  </data>
  <data name="Show on map" xml:space="preserve">
    <value>Show on map</value>
  </data>
  <data name="Sign-in on {0}" xml:space="preserve">
    <value>Sign-in on {0}</value>
  </data>
  <data name="Switch to EFIS" xml:space="preserve">
    <value>Switch to EFIS</value>
  </data>
  <data name="Tactical map will be displayed on your mobile device and in Arma. Changes made on {0} will be applied in real-time." xml:space="preserve">
    <value>Tactical map will be displayed on your mobile device and in Arma. Changes made on {0} will be applied in real-time.</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="To add a marker on a position: right click/long tap or double click/double tap." xml:space="preserve">
    <value>To add a marker on a position: right click/long tap or double click/double tap.</value>
  </data>
  <data name="Top bar displays connectivity, heading, clock time and MGRS position (meter precision)." xml:space="preserve">
    <value>Top bar displays connectivity, heading, clock time and MGRS position (meter precision).</value>
  </data>
  <data name="Troop In Contact ALERT" xml:space="preserve">
    <value>Troop In Contact ALERT</value>
  </data>
  <data name="Unload current map" xml:space="preserve">
    <value>Unload current map</value>
  </data>
  <data name="User manual" xml:space="preserve">
    <value>User manual</value>
  </data>
  <data name="Wait for cTab" xml:space="preserve">
    <value>Wait for cTab</value>
  </data>
</root>